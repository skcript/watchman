#!/bin/sh
### BEGIN INIT INFO
# Provides:          watchman sync
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Put a short description of the service here
# Description:       Put a long description of the service here
### END INIT INFO

# Change the next 3 lines to suit where you install your script and what you want to call it
DIR=/usr/local/bin/watchman sync
DAEMON=/usr/local/bin/watchman
DAEMON_NAME=watchman_sync
DAEMON_DESC=watchman_sync

# Add any command line options for your daemon here
DAEMON_OPTS=""

# This next line determines what user the script runs as.
DAEMON_USER=$(whoami)

# Adding Stop Schedule
STOP_SCHEDULE="${STOP_SCHEDULE:-QUIT/5/TERM/5/KILL/5}"

# The process ID of the script when it runs is stored here:
PIDFILE=/var/run/watchman/$DAEMON_NAME.pid

. /lib/lsb/init-functions

do_start () {
    log_daemon_msg "Starting system $DAEMON_NAME daemon"
    start-stop-daemon --start --background --pidfile $PIDFILE --make-pidfile --user $DAEMON_USER --chuid $DAEMON_USER --startas /usr/local/bin/watchman sync
    log_end_msg $?
}
do_stop () {
    log_daemon_msg "Stopping system $DAEMON_NAME daemon"
    start-stop-daemon --stop --retry=$STOP_SCHEDULE --pidfile $PIDFILE --name $DAEMON_NAME
    RETVAL="$?"

    sleep 1
    return "$RETVAL"
    log_end_msg $?
}

case "$1" in
    start)
        [ "$VERBOSE" != no ] && log_daemon_msg "Starting $DAEMON_DESC" "$DAEMON_NAME"
        do_start
        case "$?" in
            0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
            2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
        esac
        ;;
    stop)
        [ "$VERBOSE" != no ] && log_daemon_msg "Stopping $DAEMON_DESC" "$DAEMON_NAME"
        do_stop
        case "$?" in
            0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
            2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
        esac
        ;;
    restart)
        log_daemon_msg "Restarting $DAEMON_DESC" "$DAEMON_NAME"

        do_stop
        case "$?" in
            0|1)
                do_start
                case "$?" in
                    0) log_end_msg 0 ;;
                    1) log_end_msg 1 ;; # Old process is still running
                    *) log_end_msg 1 ;; # Failed to start
                esac
                ;;
            *)
                # Failed to stop
                log_end_msg 1
                ;;
        esac
        ;;
    status)
        status_of_proc -p $PID "$DAEMON_DESC" "$DAEMON_NAME" && exit 0 || exit $?
        ;;
    # status)
    #     status_of_proc "$DAEMON_NAME" "$DAEMON" && exit 0 || exit $?
    #     ;;

    *)
        echo "Usage: /etc/init.d/$DAEMON_NAME {start|stop|restart|status}"
        exit 1
        ;;

esac
exit 0
